name: TONOS SE

on:
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
  pull_request:
    types: [labeled]

env:
  DEFAULT_PORTS: '{"nginx":8080,"arango":8529,"qserver":4000,"node":40301,"requests":3000}'
  CUSTOM_PORTS: '{"nginx":8881,"arango":8882,"qserver":8883,"node":8884,"requests":8885}'

jobs:
  labels:
    name: Label taking off
    if: github.event.label.name == 'start_tests'
    runs-on: ubuntu-latest
    steps:
      - name: Take off label
        uses: actions/github-script@v1
        with:
          script: "github.issues.removeLabel({...context.issue, name: '${{ github.event.label.name }}' })"
  tests:
    if: github.event.label.name == 'start_tests' || github.event_name == 'push'
    strategy:
      fail-fast: false
      matrix:
        # disable matrix die to billing limits
        # node-version: [ 12.x, 15.x ]
        # os: [ ubuntu, macos, windows ]
        node-version: [14.x]
        os: [ubuntu]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Prepare envs
        uses: actions/github-script@v3
        with:
          script: |
            core.exportVariable('DEFAULT_PORTS_ARRAY', Object.values(JSON.parse(process.env.DEFAULT_PORTS)).join(','));
            var customPorts = JSON.parse(process.env.CUSTOM_PORTS);            
            core.exportVariable('CUSTOM_PORTS_ARRAY', Object.values(customPorts).join(','));
            Object.keys(customPorts).forEach((name) => core.exportVariable(`CUSTOM_PORTS_${name.toUpperCase()}`, customPorts[name]));

      - name: "Use Node.js: ${{ matrix.node-version }} OS: ${{matrix.os}}"
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - uses: actions/checkout@v2
        with:
          path: tonos-se

      - uses: actions/checkout@v2
        with:
          repository: tonlabs/ton-client-js
          path: ton-client-js

      - name: Install tonos-se tools
        working-directory: tonos-se
        run: |
          npm i
          npm i -g
      - name: Build ton-client-js/packages/core
        working-directory: ton-client-js/packages/core
        run: |
          npm i
          tsc

      - name: Build ton-client-js/packages/tests
        working-directory: ton-client-js/packages/tests
        run: |
          npm i
          tsc

      - name: Restore packages ton-client-js/packages/tests-node
        working-directory: ton-client-js/packages/tests-node
        run: npm i

      - name: Run TON OS SE
        run: tonos-se start

      - name: Ensure that ports are opened
        uses: nrukavkov/open-ports-check-action@v1
        with:
          port: ${{ env.DEFAULT_PORTS_ARRAY }}
          needFail: "true"

      - name: Run tests
        working-directory: ton-client-js/packages/tests-node
        env:
          USE_NODE_SE: true
          TON_NETWORK_ADDRESS: http://localhost:${{ fromJson(env.DEFAULT_PORTS).nginx }}
        run: node run

      - name: Stop TON OS SE
        run: tonos-se stop

      - name: Ensure that ports are closed
        uses: nrukavkov/open-ports-check-action@v1
        with:
          port: ${{ env.DEFAULT_PORTS_ARRAY }}
          needFail: "true"
          reverse: "true"
          pause: 3000

      - name: Change default ports
        run: |
          tonos-se config --nginx-port ${{ env.CUSTOM_PORTS_NGINX }} --arango-port ${{ env.CUSTOM_PORTS_ARANGO }} --ton-node-port ${{ env.CUSTOM_PORTS_NODE }} --q-server-port ${{ env.CUSTOM_PORTS_QSERVER }} --ton-node-requests-port ${{ env.CUSTOM_PORTS_REQUESTS }}

      - name: Run TON OS SE
        run: tonos-se start

      - name: Ensure that ports are opened
        uses: nrukavkov/open-ports-check-action@v1
        with:
          port: ${{ env.CUSTOM_PORTS_ARRAY }}
          needFail: "true"

      - name: Run tests
        working-directory: ton-client-js/packages/tests-node
        env:
          USE_NODE_SE: true
          TON_NETWORK_ADDRESS: http://localhost:${{ env.CUSTOM_PORTS_NGINX }}
        run: node run

      - name: Stop TON OS SE
        run: tonos-se stop

      - name: Ensure that ports are closed
        uses: nrukavkov/open-ports-check-action@v1
        with:
          port: ${{ env.CUSTOM_PORTS_ARRAY }}
          needFail: "true"
          reverse: "true"
          pause: 3000
